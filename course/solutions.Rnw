\documentclass[a4wide]{article}

\usepackage[utf8]{inputenc}
\usepackage[OT1]{fontenc}
\usepackage{graphicx}
\usepackage[english]{babel}

\usepackage{amsmath}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsthm}

\usepackage[usenames,dvipsnames]{xcolor}
\usepackage{todonotes}
\usepackage{etoolbox}
\usepackage{url}
\usepackage{enumerate}

%\usepackage{zref}
%\usepackage{zref-xr}
%\zexternaldocument{coursematerial}
%\usepackage[bookmarks]{hyperref}

\newcommand{\reals}{\mathbb{R}}
\newcommand{\posreals}{\reals_{>0}}
\newcommand{\posrealszero}{\reals_{\ge 0}}
\newcommand{\naturals}{\mathbb{N}}

\newcommand{\dd}{\,\mathrm{d}}

\newcommand{\mbf}[1]{\mathbf{#1}}
\newcommand{\bs}[1]{\boldsymbol{#1}}
\renewcommand{\vec}[1]{{\bs#1}}

\newcommand{\uz}{^{(0)}} % upper zero
\newcommand{\un}{^{(n)}} % upper n
\newcommand{\ui}{^{(i)}} % upper i

\newcommand{\ul}[1]{\underline{#1}}
\newcommand{\ol}[1]{\overline{#1}}

\newcommand{\E}{\operatorname{E}}
\newcommand{\V}{\operatorname{Var}}

\newcommand{\ber}{\operatorname{Bernoulli}} 
\newcommand{\bin}{\operatorname{Binomial}}
\newcommand{\be}{\operatorname{Beta}} 
\newcommand{\bebin}{\operatorname{Beta-binomial}}
\newcommand{\norm}{\operatorname{N}}

\newcommand{\logit}{\operatorname{logit}} % logit
%\newcommand{\code}[1]{\emph{\ttfamily #1}}
%\newtheorem{myex}{Exercise}

\input{nydefs.tex}

\allowdisplaybreaks

\title{Solution Sheet}
%\{Generalized Bayesian Inference\\ with Sets of Conjugate Priors\\ for Dealing with Prior-Data Conflict}
\author{Gero Walter}
\date{Lund University, 15.12.2015}
\begin{document}
%\SweaveOpts{concordance=TRUE}

\maketitle{}

<<>>=
######################################################################
# Solutions for exercise sheet on generalized Bayesian inference     #
# with sets of conjugate priors for dealing with prior-data conflict #
######################################################################
@
\subsection*{Exercise 1}

\begin{align}
f(p \mid s) &\propto f(s \mid p) f(p) \\
 &\propto p^s (1-p)^{n-s} p^{\az-1}\, (1-p)^{\bz-1} \\
 &= p^{\alpha+s-1}\, (1-p)^{\beta+n-s-1}
\end{align}
which has the form of the Beta distribution Eq.~(3) -- remember that $B(\alpha,\beta)$ is just
a normalisation constant -- with the parameters $\an = \az + s$ and $\bn = \bz + n - s$.

\subsection*{Exercise 2}

From (5), we get $\az = \nz\yz$ and $\bz = \nz - \nz\yz$. Inserting into (4) on both sides for each equation
(for ${}\uz$ and ${}\un$ versions of $\alpha$ and $\beta$), we get
\begin{align}
\nn\yn &= \nz\yz + s \\
\nn - \nn\yn &= \nz - \nz\yz + n - s\,.
\end{align}
Inserting the first into the second equation and solving for $\nn$, we get $\nn = \nz + n$.
Dividing the first equation by $\nn = \nz + n$, we get $\yn = \frac{\nz\yz + s}{\nz + n}$.

\newpage
\subsection*{Exercise 3}

<<fig.width=10, fig.height=4>>=
# ----------- Exercise 3 -----------
dbetany <- function(x, n, y, ...){
  dbeta(x, shape1=n*y, shape2=n*(1-y), ...)
}

# with basic plots
xvec <- seq(0,1, length.out=101)
par(mfrow=c(1,2))
plot(xvec, dbetany(x=xvec, n=5, y=0.5), type="l",
     xlab="p", ylab="f(p)", main="n=5, y=0.5", ylim=c(0,3))
plot(xvec, dbetany(x=xvec, n=5, y=0.3), type="l",
     xlab="p", ylab="f(p)", main="n=5, y=0.3", ylim=c(0,3))

# with ggplot2
library(ggplot2)
library(gridExtra)
p1 <- qplot(xvec, dbetany(x=xvec, n=10, y=0.5), geom="line",
            xlab="p", ylab="f(p)", main="n=10, y=0.5", ylim=c(0,3))
p2 <- qplot(xvec, dbetany(x=xvec, n=10, y=0.3), geom="line",
            xlab="p", ylab="f(p)", main="n=10, y=0.3", ylim=c(0,3))
grid.arrange(p1, p2, nrow=1, ncol=2, widths=c(1,1))
@

\subsection*{Exercise 4}

\begin{enumerate}[(i)]
\item $\nz \to 0$:\\
 $\yn \to \frac{s}{n}$, the ML estimate;\\
 $\V(p\mid s) \to \frac{\frac{s}{n}(1-\frac{s}{n})}{n+1}$ so increases disregarding the enumerator.\\
 An informative prior will decrease posterior varaiance!
\item $\nz \to \infty$:\\
 $\yn \to \yz$, data is ignored with infinitely strong prior;\\
 $\V(p\mid s) \to 0$, the posterior contracts on $\yz$.
\item $n\to \infty$ when $s/n = \text{const}$:\\
 $\yn \to \frac{s}{n}$, the ML estimate;\\
 $\V(p\mid s) \to 0$, the posterior contracts on $\frac{s}{n}$.
\end{enumerate}

\subsection*{Exercise 5}

\begin{align}
f(\theta \mid \vec{x}) &\propto f(\vec{x} \mid \theta) f(\theta) \\
 &\propto \exp\big\{ \psi \cdot \tau(\vec{x}) - n \mbf{b}(\psi)\big\}\,
          \exp\Big\{ \nz \Big[ \yz \cdot \psi - \mbf{b}(\psi) \Big] \Big\} \\
 &= \exp\Big\{ \big(\nz\yz + \tau(\vec{x})\big) \psi - (\nz + n) \mbf{b}(\psi) \Big\} \\
 &= \exp\Big\{ (\nz + n) \Big[ \frac{\nz\yz + \tau(\vec{x})}{\nz + n} \,\psi - \mbf{b} \Big] \Big\} \\
 &= \exp\Big\{ \nn \Big[ \yn \cdot \psi - \mbf{b}(\psi) \Big] \Big\}\,.
\end{align}

\subsection*{Exercise 6}

(individual)

\subsection*{Exercise 7}

<<fig.width=8, fig.height=4>>=
nn <- function(n0, n)
  n0 + n

yn <- function(n0, y0, s, n)
  (n0*y0 + s)/(n0 + n)

xvec <- seq(0,1, length.out=101)
prio1 <- dbetany(x=xvec, n=8, y=0.75)
post1 <- dbetany(x=xvec, n=nn(n0=8, n=16),
                 y=yn(n0=8, y0=0.75, s=12, n=16))
post2 <- dbetany(x=xvec, n=nn(n0=8, n=16),
                 y=yn(n0=8, y0=0.75, s=0, n=16))

# with basic plots
plot(xvec, prio1, type="l", xlab="p", ylab="f(p)",
     ylim=c(0,max(c(prio1, post1, post2))))
lines(xvec, post1, lty=2)
lines(xvec, post2, lty=3)
legend(x=0.5, y=3.5, lty=1:3, xjust=0.5, yjust=0.5,
       c("prior", "posterior 1", "posterior 2"))

# with ggplot2
library(reshape2)
df1 <- data.frame(p=xvec, "prior"=prio1,
                  "posterior1"=post1, "posterior2"=post2)
df1 <- melt(df1, "p")
bottomlegend <- theme(legend.position = "bottom",
                      legend.direction = "horizontal",
                      legend.title = element_blank())
ggplot(df1, aes(x=p, y=value, group=variable, linetype=variable)) + 
  geom_line() + bottomlegend + ylab("f(p)")
@

\subsection*{Exercise 8}

<<fig.width=6, fig.height=6, out.width='0.4\\linewidth'>>=
# ----------- Exercise 8 -----------
# installing the luck package
#install.packages("TeachingDemos")
#luckpath <- "http://download.r-forge.r-project.org/src/contrib/luck_0.9.tar.gz"
#install.packages(luckpath, repos = NULL, type = "source")
library(luck)

# (i)
data1 <- LuckModelData(n=8, tau=6)
luck1 <- LuckModel(n0=c(4,8), y0=c(0.7, 0.8), data=data1)
luck1
data2 <- LuckModelData(n=8, tau=0)
luck2 <- LuckModel(n0=c(4,8), y0=c(0.7, 0.8), data=data2)
luck2
# you can access the object slots with functions of the same name
y0(luck2)
n0(luck2)
data(luck2)
tau(data2)
n(data2)

# (ii)
#?luck::plot
plot(luck1) # the luck package plots in basic plots only
plot(luck1, control=controlList(posterior=TRUE))
# prior and both posterior sets in one plot
plot(luck1, xlim=c(4,16), ylim=c(0,1))
plot(luck1, add=TRUE, control=controlList(posterior=T, annotate=F))
plot(luck2, add=TRUE, control=controlList(posterior=T, annotate=F))
# there is an option to display the y values for the four corners 
# of the set; you might need to set xlim to make them visible
plot(luck2, xlim=c(11,17),
     control=controlList(posterior=TRUE, numbers=TRUE))
# using some other options in controlList()
plot(luck2, xlim=c(11,17),
     control=controlList(posterior=TRUE, numbers=TRUE, rDigits=3,
                         polygonCol=rgb(r=0, g=0, b=1, alpha=0.5),
                         borderCol="blue", rectangle=TRUE))
@

\subsection*{Exercise 9}

$\tau(\vec{x})$ does not appear in (23);
for any sample of size $n$, the prior imprecision decreases by the factor $\frac{\nz}{\nz + n}$!

\subsection*{Exercise 10}

The cases $\ttaux < \yzl$ and $\ttaux > \yzu$ correspond to prior-data conflict;
in both cases $\nzl$ is used to calculated the extreme value of $\yn$ closer to $\ttaux$,
while $\nzu$ is used to calculated the other extreme of $\yn$.
The `banana shape' shows this as well,
one extreme is found at the left side corners of $\PN$,
the other on the right side corners of $\PN$.

\subsection*{Exercise 11}

When $\ttaux \in [\yzl, \yzu]$,
then both $\ynl$ and $\ynu$ are calculated with $\nzu$;
both extremes are found on the right side corners of $\PN$.

\subsection*{Exercise 12}

<<fig.width=6, fig.height=6, out.width='0.4\\linewidth'>>=
# ----------- Exercise 12 -----------
# different ways to create a ScaledNormalData object
data3 <- ScaledNormalData(data1) # from a plain LuckModelData object
data3
data4 <- ScaledNormalData(mean=3, n=10) # with mean and sample size
data4
data5 <- ScaledNormalData(rnorm(10)) # with a vector of observations
data5
data6 <- ScaledNormalData(mean=3, n=10, sim=TRUE) # simulating according to
data6                                             # mean and sample size

# two ways to create a ScaledNormalLuckModel object
luck3 <- ScaledNormalLuckModel(luck1) # from a plain LuckModel object
luck3
luck4 <- ScaledNormalLuckModel(n0=c(4,8), y0=c(3,4), data=data4)
luck4                                 # by supplying n0 and y0

# prior and posterior parameter sets
plot(luck4, xlim=c(4,20), ylim=c(2,5), control=controlList(numbers=T))
plot(luck4, control=controlList(posterior=T, annotate=F, numbers=T),
     add=TRUE)
@

<<fig.width=6, fig.height=6, out.width='0.4\\linewidth', fig.show='hold'>>=
# prior and posterior sets of cdfs
#?luck::cdfplot
cdfplot(luck4)
cdfplot(luck4, control=controlList(posterior=TRUE))
@

<<fig.width=6, fig.height=6, out.width='0.4\\linewidth', fig.show='hold'>>=
# scaled normal LuckModel with prior-data conflict
luck5 <- luck4
data(luck5) <- ScaledNormalData(mean=8, n=10)
cdfplot(luck5, xlim=c(1,8))
cdfplot(luck5, xlim=c(1,8), control=controlList(posterior=TRUE))
@

\subsection*{Exercise 13}

<<fig.width=6, fig.height=6, out.width='0.4\\linewidth',  fig.show='hold'>>=
# ----------- Exercise 13 -----------
#?unionHdi
                # outputs a list containing the interval bounds
unionHdi(luck4) # and the parameters which produce the bounds
                
# prior highest density interval and interval length
unionHdi(luck4)$borders
diff(unionHdi(luck4)$borders)
# posterior highest density interval and interval length
# no prior-data conflict: much shorter
unionHdi(luck4, posterior=TRUE)$borders
diff(unionHdi(luck4, posterior=TRUE)$borders)
# prior-data conflict: less shorter, reflecting prior-data conflict
unionHdi(luck5, posterior=TRUE)$borders
diff(unionHdi(luck5, posterior=TRUE)$borders)

# prior and posterior sets of cdfs with highest density intervals
cdfplot(luck4, main="Set of prior cdfs", xlim=c(1,6))
lines(unionHdi(luck4)$borders, rep(-0.02,2), lwd=3, lend=2)
cdfplot(luck4, control=controlList(posterior=TRUE),
        main="Set of posterior cdfs", xlim=c(1,6))
lines(unionHdi(luck4, posterior=TRUE)$borders, rep(-0.02,2), lwd=3, lend=2)
@

\subsection*{Exercise 14}

(individual)

\end{document}